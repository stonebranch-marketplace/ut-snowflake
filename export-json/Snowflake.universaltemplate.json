{
    "agent": null,
    "agentCluster": null,
    "agentClusterVar": null,
    "agentFieldsRestriction": "No Restriction",
    "agentType": "Any",
    "agentVar": null,
    "automaticOutputRetrievalFieldsRestriction": "No Restriction",
    "broadcastCluster": null,
    "broadcastClusterVar": null,
    "createConsole": false,
    "credentialFieldsRestriction": "No Restriction",
    "credentials": null,
    "credentialsVar": null,
    "description": "This universal provides integration with snowflake to unload and load data from different sources. Rest of the SQL and table functionalities can be performed using SQL tasks via JDBC ",
    "desktopInteract": false,
    "elevateUser": false,
    "environment": [],
    "environmentVariablesFieldsRestriction": "No Restriction",
    "exitCodeOutput": null,
    "exitCodeProcessing": "Success Exitcode Range",
    "exitCodeProcessingFieldsRestriction": "No Restriction",
    "exitCodeText": null,
    "exitCodes": "0",
    "fields": [
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 1",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Provide the snowflake user account e.g. sr14548.eu-central-1",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Snowflake Account",
            "name": "snowflake_account",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": true,
            "sequence": 0,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "f7953dce579741d581f317819f09faac"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 2",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Specify your host information in the form of a URL  e.g sr14548.eu-central-1.snowflakecomputing.com",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Snowflake Host URL",
            "name": "host_url",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": true,
            "sequence": 1,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "d80a919da9ef46c9b4fcbe87ecdbdb49"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Credential Field 2",
            "fieldType": "Credential",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Specify your Snowflake login name.",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Snowflake Login Name",
            "name": "login_name",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": true,
            "sequence": 2,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "3f675825a7514cc592d60bebc9587b2c"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [
                {
                    "fieldValue": "INFO",
                    "sequence": 0,
                    "sysId": "9ab1f10f038e40358e9b34efc38de371",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "DEBUG",
                    "sequence": 1,
                    "sysId": "aae7c405f8a54eed8ffc594c37a165ea",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "WARNING",
                    "sequence": 2,
                    "sysId": "9f454699bfd544ba9a87719f5f862f79",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "ERROR",
                    "sequence": 3,
                    "sysId": "6e1b262d430f491198ca9c699aaaa026",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "CRITICAL",
                    "sequence": 4,
                    "sysId": "8e2106fdf18c4adc9d025fb42d3f3fba",
                    "useFieldValueForLabel": true
                }
            ],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Choice Field 4",
            "fieldType": "Choice",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "select a log level",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Log Level",
            "name": "log_level",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 3,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "9d3953aa39ce4a60895d209b56adefc2"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [
                {
                    "fieldValue": "load_local_file",
                    "fieldValueLabel": "Copy from local server to Internal staging",
                    "sequence": 0,
                    "sysId": "c8b3dbc5d667459ab3ba3b92bd20d801",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "load_from_stage",
                    "fieldValueLabel": "Load Internal stage file to Snowflake Table",
                    "sequence": 1,
                    "sysId": "66f10f6ee11942a7afe8f78a904d3b28",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "load_s3",
                    "fieldValueLabel": "Load data from AWS S3 to Snowflake",
                    "sequence": 2,
                    "sysId": "37148cdb08454aff893795e01460b009",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "load_azure",
                    "fieldValueLabel": "Load data from Azure Storage to Snowflake",
                    "sequence": 3,
                    "sysId": "f53c7310553b4e378011110c63ee7c8a",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "load_gcp",
                    "fieldValueLabel": "Load data from Google storage to Snowflake",
                    "sequence": 4,
                    "sysId": "30b264e39ed24c31bde789f5ebefa2ab",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "unload_s3",
                    "fieldValueLabel": "Unload Snowflake data to AWS S3",
                    "sequence": 5,
                    "sysId": "525f00ded77b4bb7b4672b13cdb93e52",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "unload_azure",
                    "fieldValueLabel": "Unload Snowflake data to Azure Storage",
                    "sequence": 6,
                    "sysId": "333583d2b06a44a080083403ced91ab0",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "unload_gcp",
                    "fieldValueLabel": "Unload Snowflake data to Google Storage",
                    "sequence": 7,
                    "sysId": "d0f4cebdf4314668846bbc5f236af0b5",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "unload_to_internal_stage",
                    "fieldValueLabel": "Unload  Snowflake data to Internal stage",
                    "sequence": 8,
                    "sysId": "603b8d8334aa4989b519484e0158ac47",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "unload_internal_stage_to_localfile",
                    "fieldValueLabel": "Unload from internal stage to local server",
                    "sequence": 9,
                    "sysId": "9d99e2cd4fbf4b129e2b214f65da7696",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "execute_snowflake_command",
                    "fieldValueLabel": "Execute a Snowflake command",
                    "sequence": 11,
                    "sysId": "06dc7644e2504f7a852cde4e382e6afc",
                    "useFieldValueForLabel": false
                }
            ],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Choice Field 1",
            "fieldType": "Choice",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Select the required snowflake function(if the required function not available then check the SQL task to invoke snowflake DB)",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Select a Snowflake function",
            "name": "snowflake_function",
            "noSpaceIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 4,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "ad17d917cf92461686045635c8d0b07b"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Script Field 1",
            "fieldType": "Script",
            "fieldValue": null,
            "formColumnSpan": 3,
            "formEndRow": true,
            "formStartRow": true,
            "hint": "Provide a snowflake command either in SQL or put / get commands etc.",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Snowflake Command",
            "name": "snowflake_command",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 8,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "execute_snowflake_command",
            "sysId": "c2088bd75a424c31bbc3d9faebcfc354"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 5",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Provide the local file name that need to be copied to stage",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Local file Name & Path",
            "name": "local_filename",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 9,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "load_local_file,unload_internal_stage_to_localfile",
            "sysId": "0aa7c9f68518402f8ab1430452a71569"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 18",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "provide the stage(internal) name in snowflake",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Stage Name",
            "name": "stage_name",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 10,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "load_local_file,unload_to_internal_stage,remove_staging_file",
            "sysId": "4c3572d73a70459e897c37ef712d91ac"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Boolean Field 3",
            "fieldType": "Boolean",
            "fieldValue": "false",
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Select only if you have a encrypted private key",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Encrypted Private Key",
            "name": "encrypted_private_key",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 11,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "load_from_stage",
            "sysId": "ecab33bea42a47a0a7202b6033a1af15"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 6",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": true,
            "formStartRow": true,
            "hint": "Provide the stage file names , if there are multiple file then separate by comma",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Stage File Name(s)",
            "name": "stage_file_name",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 12,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "load_from_stage,unload_internal_stage_to_localfile,remove_staging_file",
            "sysId": "26b3118176c44006bc6810ea6708abbe"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 4",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Specify the fully-qualified name of the pipe to use to load the data",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Pipe Name",
            "name": "pipe_name",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 14,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "load_from_stage",
            "sysId": "4d1136756ddb41ca83c6b566c08a575f"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 7",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "provide the private key file path to establish connection to snowfake for data ingest",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Private Key File Path",
            "name": "private_key_path",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 15,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "load_from_stage",
            "sysId": "25594ca7585d458eb6076581eb2ff0f7"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Credential Field 1",
            "fieldType": "Credential",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Provide the password for private if it is encrypted",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Private Key Password",
            "name": "private_key_pass",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 16,
            "showIfField": "Boolean Field 3",
            "showIfFieldValue": "true",
            "sysId": "a8046a12346a4296a71c85c4e0005100"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 9",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "provide the full path and the snowflake table name where the table to be loaded",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Snowflake Table Name",
            "name": "snowflake_table_name",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 18,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "load_from_stage,load_s3,load_azure,load_gcp,unload_s3,unload_azure,unload_gcp,unload_to_internal_stage",
            "sysId": "9c732d5c7ae6427899b0f6f5e2f77673"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Boolean Field 4",
            "fieldType": "Boolean",
            "fieldValue": "false",
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Check this if you would need to supply AWS access key credentials",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Use AWS Credentials",
            "name": "aws_credential_flag",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 19,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "load_s3,unload_s3",
            "sysId": "a7f76eadab5347e4980ec67dd9fe67a4"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Credential Field 3",
            "fieldType": "Credential",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Provide the AWS secret Access Key (run time user AWS Key id and secret key in the password section)",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "AWS Key ID & Secret Access Key",
            "name": "aws_access_key",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 20,
            "showIfField": "Boolean Field 4",
            "showIfFieldValue": "true",
            "sysId": "3f5b10ee15bf46d18a73d25c74e2fb8b"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 3",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Provide the name of the AWS storage integration created in snowflake",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "AWS Storage Integration",
            "name": "aws_storage_integration",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 21,
            "showIfField": "Boolean Field 4",
            "showIfFieldValue": "false",
            "sysId": "246cdc18c534446082c6219d3b66cb47"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Boolean Field 1",
            "fieldType": "Boolean",
            "fieldValue": "false",
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "If you need load the data using pattern the check this option",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Load using Pattern",
            "name": "load_using_patterns",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 22,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "load_from_stage,remove_staging_file",
            "sysId": "b84ee0d573fe49c9888c3580ce605fc6"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 8",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Provide your S3 bucket URL s3://<your_s3_bucket>/data/",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "S3 Bucket URL",
            "name": "s3_bucket_url",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 26,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "load_s3,unload_s3",
            "sysId": "ce7d2f18db014a299ba2add7d7ef9edc"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 11",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "provide the Azure container file URL starting with azure://",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Azure container File",
            "name": "azure_container_file",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 27,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "load_azure,unload_azure",
            "sysId": "fa2b3139136f4887a4fccbde8b3509a6"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 10",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Provide the Azure storage integration created in snowflake",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Azure Storage Integration",
            "name": "azure_storage_integration",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 28,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "unload_azure",
            "sysId": "edb6cb3cddab4e9f930cf1db1609e965"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 13",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "provide the bucket name and the file name e.g. gcs://mybucket/data/files",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "GCP storage URL",
            "name": "gcs_bucket",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 29,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "load_gcp,unload_gcp",
            "sysId": "aa7a699a82fb448c9342b56153d861b0"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Credential Field 4",
            "fieldType": "Credential",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Provide the Azure Sas Token",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Azure Sas Token",
            "name": "azure_sas_token",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 30,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "load_azure,unload_azure",
            "sysId": "06ec09336acf4384b80bf0f3507683d1"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Boolean Field 2",
            "fieldType": "Boolean",
            "fieldValue": "false",
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "To Specify an existing named file format to use for loading data into the table",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Existing File Format Name",
            "name": "existing_file_format_name",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 31,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "load_s3,load_azure,load_gcp,unload_azure,unload_s3,unload_gcp,unload_to_internal_stage",
            "sysId": "e5b9609daa28405b9c601523eff7bf82"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 14",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Provide the snowflake storage integration details",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Storage Integration",
            "name": "storage_integration",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 32,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "load_gcp,unload_gcp",
            "sysId": "1b41f213ec644b4c97dfa1ab1b52a95d"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 15",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 3,
            "formEndRow": true,
            "formStartRow": true,
            "hint": "regular expression pattern string - specifying the file names and/or paths to match.",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Pattern",
            "name": "pattern",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 33,
            "showIfField": "Boolean Field 1",
            "showIfFieldValue": "true",
            "sysId": "e4bd48b26f4a4a15addb94a59f5a8289"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 12",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Specifies an existing named file format to use for loading data into the table",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "File Format Name",
            "name": "file_format_name",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 34,
            "showIfField": "Boolean Field 2",
            "showIfFieldValue": "true",
            "sysId": "3e3a6f41d4af4fe8bfe3f20037099f69"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [
                {
                    "fieldValue": "CSV",
                    "sequence": 0,
                    "sysId": "80f5ab52d4654f999811b12c5ced37c2",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "JSON",
                    "sequence": 1,
                    "sysId": "7a65e2ee9f7d461080e4da862f2d3412",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "AVRO",
                    "sequence": 2,
                    "sysId": "3bd01bdcfa3c480da6aba25b138fad40",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "ORC",
                    "sequence": 3,
                    "sysId": "00844872f8ea46d797e296ddd115ff6b",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "PARQUET",
                    "sequence": 4,
                    "sysId": "7c5ae12ae1e9413abbd94cc142bf3e73",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "XML",
                    "sequence": 5,
                    "sysId": "7e8e01a0fddd4da7a02d8866d0490657",
                    "useFieldValueForLabel": true
                }
            ],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Choice Field 5",
            "fieldType": "Choice",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "specify the format type CSV | JSON | AVRO | ORC | PARQUET | XML",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Format Type",
            "name": "format_type",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 35,
            "showIfField": "Boolean Field 2",
            "showIfFieldValue": "false",
            "sysId": "e3db5f4f770d4194b15ef42676b5a37e"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 17",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 3,
            "formEndRow": true,
            "formStartRow": true,
            "hint": "Specify the file format type options -- e.g. FIELD_DELIMITER = '|' if CSV type -- Refer : https://docs.snowflake.com/en/sql-reference/sql/copy-into-table.html",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "File Format Type Options",
            "name": "file_format_type_options",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 36,
            "showIfField": "Boolean Field 2",
            "showIfFieldValue": "false",
            "sysId": "faa9599cf8e143bab8b310122c087a47"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 16",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 3,
            "formEndRow": true,
            "formStartRow": true,
            "hint": "Include other copy options e.g ON_ERROR = CONTINUE or FORCE=TRUE- Refer https://docs.snowflake.com/en/sql-reference/sql/copy-into-table.html",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Copy Options",
            "name": "copy_options",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 37,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "load_s3,load_azure,load_gcp,unload_s3,unload_azure,unload_gcp,unload_to_internal_stage",
            "sysId": "24394f89341049fdb34f0e5dff198f26"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Integer Field 1",
            "fieldType": "Integer",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Provide the Polling Interval time in Seconds",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Polling Interval (Secs)",
            "name": "polling_interval",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 38,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "load_from_stage",
            "sysId": "9967866e1f544157806ecb313c9e7af9"
        },
        {
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "fieldLength": null,
            "fieldMapping": "Integer Field 2",
            "fieldType": "Integer",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": "Specify the number of times to poll , otherwise default is set to 50",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Number of times to Poll",
            "name": "polling_time",
            "noSpaceIfHidden": true,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 39,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "load_from_stage",
            "sysId": "4357d01a1a8749d5ad5749578c2e280e"
        }
    ],
    "name": "Snowflake",
    "outputFailureOnly": false,
    "outputReturnFile": null,
    "outputReturnNline": "100",
    "outputReturnSline": "1",
    "outputReturnText": null,
    "outputReturnType": "NONE",
    "outputType": "STDOUT",
    "runtimeDir": null,
    "script": "#!/opt/universal/python3.6/bin/python3\n###########################################################\n#    Name: Snowflake_Load_Unload_Data.py\n#\n#    Purpose: Universal controller integration functionalities with Snowflake for data load and unload\n#\n#\n#    Prerequisites:\n#     - Universal Agent for Windows/Linux\n#     - Python 3.6.x\n#     - Requires the Python modules\n#     - datetime,argparse, sys\n#     - Download the re-requisite python modules from https://raw.githubusercontent.com/snowflakedb/snowflake-connector-python/master/tested_requirements/requirements_36.reqs\n#     - After then pip install snowflake-connector-python from agent python library\n#\n#\n#     Version History:\n#     1.0  Ravi Murugesan 2020-11-17 Initial Version\n#\n#\n#\n####################################################\nversion = \"0.1\"\n\n# Used modules\n\nimport glob\nimport sys, os\nimport datetime, time\nimport logging\nimport argparse\nimport snowflake.connector\nfrom logging import getLogger\nfrom snowflake.ingest import SimpleIngestManager\nfrom snowflake.ingest import StagedFile\nfrom snowflake.ingest.utils.uris import DEFAULT_SCHEME\nfrom datetime import timedelta\nfrom requests import HTTPError\nfrom cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.serialization import load_pem_private_key\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.serialization import Encoding\nfrom cryptography.hazmat.primitives.serialization import PrivateFormat\nfrom cryptography.hazmat.primitives.serialization import NoEncryption\n\n# -- logging settings DEBUG, INFO, WARNING, ERROR, CRITICAL\n\nlogging.basicConfig(level=\"${ops_snw_fl_log_level}\", format=' %(asctime)s - %(levelname)s - %(message)s')\n##\n##Main Function\n##\ndef main():\n    Set_Variables()  # -- Set Variables from Universal Task Form or Command Line Input\n    if args.snowflake_function == \"load_local_file\":\n        load_local_file()\n    elif args.snowflake_function == \"load_s3\":\n        load_s3()\n    elif args.snowflake_function == \"load_azure\":\n        load_azure()\n    elif args.snowflake_function == \"load_gcp\":\n        load_gcp()\n    elif args.snowflake_function == \"execute_snowflake_command\":\n        execute_snowflake_command()\n    elif args.snowflake_function == \"load_from_stage\":\n        load_from_stage()\n    elif args.snowflake_function == \"unload_azure\":\n        unload_azure()\n    elif args.snowflake_function == \"unload_s3\":\n        unload_s3()\n    elif args.snowflake_function == \"unload_gcp\":\n        unload_gcp()\n    elif args.snowflake_function == \"unload_to_internal_stage\":\n        unload_to_internal_stage()\n    elif args.snowflake_function == \"unload_internal_stage_to_localfile\":\n        unload_internal_stage_to_localfile()\n\n#####################################################################################\n# --\ndef Set_Variables():\n    parser = argparse.ArgumentParser(description='Purpose : Execute a Snowflake function')\n    # ## -->Snowflake Task Settings\n    parser.add_argument(\"--snowflake_account\", default=\"${ops_snw_fl_snowflake_account}\")\n    parser.add_argument(\"--host_url\", default=\"${ops_snw_fl_host_url}\")\n    parser.add_argument(\"--login_name\", default=\"${_credentialUser('${ops_snw_fl_login_name}')}\")\n    parser.add_argument(\"--login_password\", default=\"${_credentialPwd('${ops_snw_fl_login_name}')}\")\n    parser.add_argument(\"--snowflake_function\", default=\"${ops_snw_fl_snowflake_function}\")\n    parser.add_argument(\"--log_level\", default=\"${ops_snw_fl_log_level}\")\n    parser.add_argument(\"--local_filename\", default=\"${ops_snw_fl_local_filename}\")\n    parser.add_argument(\"--stage_name\", default=\"${ops_snw_fl_stage_name}\")\n    parser.add_argument(\"--stage_file_name\", default=\"${ops_snw_fl_stage_file_name}\")\n    parser.add_argument(\"--pipe_name\", default=\"${ops_snw_fl_pipe_name}\")\n    parser.add_argument(\"--private_key_path\", default=\"${ops_snw_fl_private_key_path}\")\n    parser.add_argument(\"--private_key_pass\", default=\"${_credentialPwd('${ops_snw_fl_private_key_pass}')}\")\n    parser.add_argument(\"--snowflake_table_name\", default=\"${ops_snw_fl_snowflake_table_name}\")\n    parser.add_argument(\"--aws_access_key\", default=\"${_credentialUser('${ops_snw_fl_aws_access_key}')}\")\n    parser.add_argument(\"--aws_access_secret_key\", default=\"${_credentialPwd('${ops_snw_fl_aws_access_key}')}\")\n    parser.add_argument(\"--load_using_patterns\", default=\"${ops_snw_fl_load_using_patterns}\")\n    parser.add_argument(\"--s3_bucket_url\", default=\"${ops_snw_fl_s3_bucket_url}\")\n    parser.add_argument(\"--azure_container_file\", default=\"${ops_snw_fl_azure_container_file}\")\n    parser.add_argument(\"--gcs_bucket\", default=\"${ops_snw_fl_gcs_bucket}\")\n    parser.add_argument(\"--azure_sas_token\", default=\"${_credentialPwd('${ops_snw_fl_azure_sas_token}')}\")\n    parser.add_argument(\"--existing_file_format_name\", default=\"${ops_snw_fl_existing_file_format_name}\")\n    parser.add_argument(\"--storage_integration\", default=\"${ops_snw_fl_storage_integration}\")\n    parser.add_argument(\"--pattern\", default=\"${ops_snw_fl_pattern}\")\n    parser.add_argument(\"--file_format_name\", default=\"${ops_snw_fl_file_format_name}\")\n    parser.add_argument(\"--format_type\", default=\"${ops_snw_fl_format_type}\")\n    parser.add_argument(\"--file_format_type_options\", default=\"${ops_snw_fl_file_format_type_options}\")\n    parser.add_argument(\"--copy_options\", default=\"${ops_snw_fl_copy_options}\")\n    parser.add_argument(\"--snowflake_command\", default=\"${ops_snw_fl_snowflake_command}\")\n    parser.add_argument(\"--encrypted_private_key\", default=\"${ops_snw_fl_encrypted_private_key}\")\n    parser.add_argument(\"--polling_interval\",default=\"${ops_snw_fl_polling_interval}\")\n    parser.add_argument(\"--polling_time\",default=\"${ops_snw_fl_polling_time}\")\n    parser.add_argument(\"--aws_storage_integration\",default=\"${ops_snw_fl_aws_storage_integration}\")\n    parser.add_argument(\"--aws_credential_flag\",default=\"${ops_snw_fl_aws_credential_flag}\")\n    parser.add_argument(\"--azure_storage_integration\",default=\"${ops_snw_fl_azure_storage_integration}\")\n    \n    ################################################################################################\n    # ## --\n    global args\n    args = parser.parse_args()\n    # -- Setup Logging\n    logging.info(\"Executing version \" + version + \" with the following paramaters\")\n    logging.info(args)\n# --\n# --   \n#This function is to establish connection with Snowflake account\n#\n#\ndef connect_snowflake():\n# Make the connection to snowflake\n    try:\n        snowflake_connect = snowflake.connector.connect(\n            user=args.login_name,\n            password=args.login_password,\n            account=args.snowflake_account\n            )\n\n        return snowflake_connect\n    except Exception as e:\n        logging.error(\"Error in connection to snowflake account - check snowflake user credentials & account\")\n        logging.error(e)\n        sys.exit(1)\n#\n# \n###This function is to load the file from local server to snowflake stage\n# \ndef load_local_file():   \n    snowflake_client=connect_snowflake()\n    cs=snowflake_client.cursor()\n    try:\n        logging.info(\"Initiating Local file transfer to snowflake staging area\")\n        put_command=\"PUT file://\"+args.local_filename+\" \"+args.stage_name\n        cs.execute(put_command)\n        results = cs.fetchall()\n        for file in results:\n            print(f'{file}')\n            logging.info(\"File transfer to snowflake staging : \"+str(file))\n    except Exception as e:\n        logging.error(\"Error in transfer file to Snowflake staging\")\n        logging.error(e)\n        sys.exit(1)\n######\n#\n#\n###This function is to download the stage file to local server\n# \ndef unload_internal_stage_to_localfile():   \n    snowflake_client=connect_snowflake()\n    cs=snowflake_client.cursor()\n    try:\n        logging.info(\"Initiating data to snowflake staging area\")\n        put_command=\"get \"+args.stage_file_name+\" file://\"+args.local_filename\n        cs.execute(put_command)\n        results = cs.fetchall()\n        for file in results:\n            print(f'{file}')\n            logging.info(\"File transfer to snowflake staging : \"+str(file))\n    except Exception as e:\n        logging.error(\"Error in transfer file to Snowflake staging\")\n        logging.error(e)\n        sys.exit(1)\n######\n#\n#\ndef unload_to_internal_stage():\n    snowflake_client=connect_snowflake()\n    cs=snowflake_client.cursor()\n    try:\n        logging.info(\"Initiating snowflake table unload to snowflake staging area\")\n        copy_script=\"COPY INTO \"+args.stage_name+\" FROM \"+args.snowflake_table_name\n        if args.existing_file_format_name == \"false\":\n            copy_script=copy_script+\" file_format=(type=\"+args.format_type\n            if args.file_format_type_options:\n                copy_script=copy_script+\" \"+args.file_format_type_options+\")\"\n            else:\n                copy_script=copy_script+\")\"\n        else:\n            copy_script=copy_script+\" file_format=\"+args.file_format_name\n        if args.copy_options :\n            copy_script=copy_script+\" \"+args.copy_options+\";\"\n        else:\n                copy_script=copy_script+\";\" \n        #########copy command for data unload######################################\n        logging.info(\"Copy script:\"+copy_script)\n        cs.execute(copy_script)\n        results = cs.fetchall()\n        for file in results:\n            logging.info(\"unload result:\"+str(file))\n            logging.info(\"Table extract moved to staging : \"+str(file))\n        ################################################################\n        list_stage_files=\"list \"+args.stage_name\n        cs.execute(list_stage_files)\n        results = cs.fetchall()\n        for file in results:\n            print(f'{file}')\n            logging.info(\"Files in staging : \"+str(file))\n        ###################################################################################\n    except Exception as e:\n        logging.error(\"Error in copying table to Snowflake staging\")\n        logging.error(e)\n        sys.exit(1)\n\n###### Function executes a snowflake command \ndef execute_snowflake_command():   \n    snowflake_client=connect_snowflake()\n    cs=snowflake_client.cursor()\n    try:\n        logging.info(\"Initiating command execution in Snowflake\")\n        script = open(r'''${_scriptPath('${ops_snw_fl_snowflake_command}')}''', 'r')\n        script_data = script.read()\n        cs.execute(script_data)\n        results = cs.fetchall()\n        logging.info(\"Command executed ,Output below in STDOUT \")\n        for file in results:\n            print(f'{file}')\n    except Exception as e:\n        logging.error(\"Error in executing the command\")\n        logging.error(e)\n        sys.exit(1)\n#\n#####################################################################################################\n# This function is load the AWS S3 data directly in to snowflake table\n#####################################################################################################\n#\ndef load_s3():   \n    snowflake_client=connect_snowflake()\n    cs=snowflake_client.cursor()\n    try:\n        logging.info(\"Initiating Load from S3 to snowflake Table\")\n        ####Prepare copy command from the Job defintion Input\n        if args.aws_credential_flag == \"true\":\n            copy_script=\"COPY INTO \"+args.snowflake_table_name+\" FROM \"+args.s3_bucket_url+  \\\n                    \" credentials=(aws_key_id='\"+args.aws_access_key+\"' aws_secret_key='\"+args.aws_access_secret_key+\"')\"\n        else:\n            copy_script=\"COPY INTO \"+args.snowflake_table_name+\" FROM \"+args.s3_bucket_url+  \\\n                \" storage_integration=\"+args.aws_storage_integration\n        if args.existing_file_format_name == \"false\":\n            copy_script=copy_script+\" file_format=(type=\"+args.format_type\n            if args.file_format_type_options:\n                copy_script=copy_script+\" \"+args.file_format_type_options+\")\"\n            else:\n                copy_script=copy_script+\")\"\n        else:\n            copy_script=copy_script+\" file_format=\"+args.file_format_name\n        if args.copy_options :\n            copy_script=copy_script+\" \"+args.copy_options+\";\"\n        else:\n                copy_script=copy_script+\";\" \n        ###Copy command set for loading from S3 data to snowflake table\n        logging.info(\"Copy script:\"+copy_script)\n        cs.execute(copy_script)\n        results = cs.fetchall()\n        logging.info(\"AWS S3 data load executed ,Output below in STDOUT \")\n        for file in results:\n            print(f'{file}')\n    except Exception as e:\n        logging.error(\"Error in loading data from AWS S3\")\n        logging.error(e)\n        sys.exit(1)\n#\n######################################################################################\n#This function is to load the azure container blobs in to snowflake table directly\n#######################################################################################\ndef load_azure():   \n    snowflake_client=connect_snowflake()\n    cs=snowflake_client.cursor()\n    try:\n        logging.info(\"Initiating Load from Azure container to snowflake Table\")\n        ####Prepare copy command from the Job defintion Input\n        copy_script=\"COPY INTO \"+args.snowflake_table_name+\" FROM '\"+args.azure_container_file+  \\\n                    \"' credentials=(azure_sas_token='\"+args.azure_sas_token+\"')\"\n        if args.existing_file_format_name == \"false\":\n            copy_script=copy_script+\" file_format=(type=\"+args.format_type\n            if args.file_format_type_options:\n                copy_script=copy_script+\" \"+args.file_format_type_options+\")\"\n            else:\n                copy_script=copy_script+\")\"\n        else:\n            copy_script=copy_script+\" file_format=\"+args.file_format_name\n        if args.copy_options:\n            copy_script=copy_script+\" \"+args.copy_options+\";\"\n        else:\n                copy_script=copy_script+\";\" \n        ###Copy command set for loading from Azure data to snowflake table\n        logging.info(\"Copy script:\"+copy_script)\n        cs.execute(copy_script)\n        results = cs.fetchall()\n        logging.info(\"Azure Data load executed ,Output below in STDOUT \")\n        for file in results:\n            print(f'{file}')\n    except Exception as e:\n        logging.error(\"Error in loading data from Azure storage\")\n        logging.error(e)\n        sys.exit(1)\n#\n#\n#\n######################################################################################\n#This function is to load the Google storage bucket in to snowflake table directly\n#######################################################################################\ndef load_gcp():   \n    snowflake_client=connect_snowflake()\n    cs=snowflake_client.cursor()\n    try:\n        logging.info(\"Initiating Load from Google container to snowflake Table\")\n        ####Prepare copy command from the Job defintion Input\n        copy_script=\"COPY INTO \"+args.snowflake_table_name+\" FROM '\"+args.gcs_bucket+  \\\n                    \"' storage_integration=\"+args.storage_integration\n        if args.existing_file_format_name == \"false\":\n            copy_script=copy_script+\" file_format=(type=\"+args.format_type\n            if args.file_format_type_options:\n                copy_script=copy_script+\" \"+args.file_format_type_options+\")\"\n            else:\n                copy_script=copy_script+\")\"\n        else:\n            copy_script=copy_script+\" file_format=\"+args.file_format_name\n        if args.copy_options:\n            copy_script=copy_script+\" \"+args.copy_options+\";\"\n        else:\n                copy_script=copy_script+\";\" \n        ###Copy command set for loading from GCP data to snowflake table\n        logging.info(\"Copy script:\"+copy_script)\n        cs.execute(copy_script)\n        results = cs.fetchall()\n        logging.info(\"Google storage Data load executed ,Output below in STDOUT \")\n        for file in results:\n            print(f'{file}')\n    except Exception as e:\n        logging.error(\"Error in loading the data from Google Storage\")\n        logging.error(e)\n        sys.exit(1)\n#\n#\n################################################################################################\n# This function is to load the data files in snowflake staging to snowflake table\n################################################################################################\n#\ndef load_from_stage():\n    #snowflake_client=connect_snowflake()\n    #cs=snowflake_client.cursor()\n    if args.polling_time:\n        num_times_to_poll=int(args.polling_time)\n        logging.info(\"Load history will be scanned \"+args.polling_time+\" times every \"+args.polling_interval+\" times\")\n    else:\n        logging.info(\"Load History scan set to default (50 times) \")\n        num_times_to_poll=50\n    try:\n        logging.info(\"Initiating Load from snowflake stage to table\")\n        if args.encrypted_private_key == \"true\":\n            with open(args.private_key_path, 'rb') as pem_in:\n                  pemlines = pem_in.read()\n                  private_key_obj = load_pem_private_key(pemlines,\n                  args.private_key_pass.encode(),default_backend())\n            private_key_text = private_key_obj.private_bytes(\n                      Encoding.PEM, PrivateFormat.PKCS8, NoEncryption()).decode('utf-8')\n        else:\n            with open(args.private_key_path, 'rb') as pem_in:\n                pemlines = pem_in.read()\n                private_key_obj = load_pem_private_key(pemlines,password=None,backend=None)\n                private_key_text = private_key_obj.private_bytes(\n                      Encoding.PEM, PrivateFormat.PKCS8, NoEncryption()).decode('utf-8')\n\n# Assume the public key has been registered in Snowflake:\n# private key in PEM format\n# List of files in the stage specified in the pipe definition\n        str1=\" \"\n        input_files=args.stage_file_name\n        list_files=input_files.split(\",\")\n        logging.info(\"input file considered for loading \"+ str1.join(list_files))\n        #print(\"private_key\",private_key_text)\n        ingest_manager = SimpleIngestManager(account=args.snowflake_account,\n                                     host=args.host_url,\n                                     user=args.login_name,\n                                     pipe=args.pipe_name,\n                                     private_key=private_key_text)\n#logging.info(\"File Ingestion Authentication\")\n# List of files, but wrapped into a class\n        staged_file_list = []\n        for file_name in list_files:\n            staged_file_list.append(StagedFile(file_name, None))\n        try:\n            resp = ingest_manager.ingest_files(staged_file_list)\n            logging.info(\"resp: \"+str(resp))\n        except HTTPError as e:\n            # HTTP error, may need to retry\n            logging.error(e)\n            sys.exit(1)\n            # This means Snowflake has received file and will start loading\n        assert(resp['responseCode'] == 'SUCCESS')\n        # Needs to wait for a while to get result in history\n        count=0\n        while True:\n            history_resp = ingest_manager.get_history()\n            if len(history_resp['files']) > 0:\n                print('Load Result:\\n')\n                print(history_resp)\n                for load_status in history_resp['files']:\n                    if load_status['status'] != \"LOADED\":\n                        logging.error(\"Error in loading the data \"+load_status['path'])\n                    else:\n                        logging.info(\"Files in path :\"+load_status['path']+\" loaded successfully \")\n                break\n            else:\n                # wait for the polling interval seconds\n                count=count+1\n                time.sleep(int(args.polling_interval))\n                if count == num_times_to_poll:\n                    logging.info(\"Reached the polling limit - Aborting execution\")\n                    sys.exit(1)\n            hour = timedelta(hours=1)\n            date = datetime.datetime.utcnow() - hour\n            history_range_resp = ingest_manager.get_history_range(date.isoformat() + 'Z')\n            logging.info('\\nScanning load History:'+str(count))\n            #logging.info(history_range_resp)\n    except Exception as e:\n        logging.error(\"Error in loading the data from Internal Stage\")\n        logging.error(e)\n        sys.exit(1)\n#####\n#\n###########This function is to unload a table content to azure container \ndef unload_azure():  \n    snowflake_client=connect_snowflake()\n    cs=snowflake_client.cursor()\n    try:\n        logging.info(\"Initiating Unload from Azure container to snowflake Table\")\n        ####Prepare copy command from the Job defintion Input args.azure_container_file\n        print(\"azure-storage-integ\",type(args.azure_storage_integration))\n        print(args.azure_storage_integration)\n\n        if args.azure_storage_integration:\n            copy_script=\"COPY INTO '\"+args.azure_container_file+\"' FROM \"+args.snowflake_table_name+  \\\n                    \" storage_integration=\"+args.azure_storage_integration+\" credentials=(azure_sas_token='\"+args.azure_sas_token+\"')\"\n        else:\n            copy_script=\"COPY INTO '\"+args.azure_container_file+\"' FROM \"+args.snowflake_table_name+  \\\n                   \" credentials=(azure_sas_token='\"+args.azure_sas_token+\"')\"\n        if args.existing_file_format_name == \"false\":\n            copy_script=copy_script+\" file_format=(type=\"+args.format_type\n            if args.file_format_type_options:\n                copy_script=copy_script+\" \"+args.file_format_type_options+\")\"\n            else:\n                copy_script=copy_script+\")\"\n        else:\n            copy_script=copy_script+\" file_format=\"+args.file_format_name\n        if args.copy_options:\n            copy_script=copy_script+\" \"+args.copy_options+\";\"\n        else:\n                copy_script=copy_script+\";\" \n        ###Copy command set for loading from Azure data to snowflake table\n        logging.info(\"Copy script:\"+copy_script)\n        cs.execute(copy_script)\n        results = cs.fetchall()\n        logging.info(\"Azure Data unload executed ,Output below in STDOUT \")\n        for file in results:\n            print(f'{file}')\n    except Exception as e:\n        logging.error(\"Error unloading data from Azure storage\")\n        logging.error(e)\n        sys.exit(1)\n##\n#\n#\n##This function is to unload data from snowflake table to AWS S3 bucket\ndef unload_s3():   \n    snowflake_client=connect_snowflake()\n    cs=snowflake_client.cursor()\n    try:\n        logging.info(\"Initiating unload from S3 to snowflake Table\")\n        ####Prepare copy command from the Job defintion Input args.s3_bucket_url\n        if args.aws_credential_flag == \"true\":\n            copy_script=\"COPY INTO \"+args.s3_bucket_url+\" FROM \"+args.snowflake_table_name+  \\\n                    \" credentials=(aws_key_id='\"+args.aws_access_key+\"' aws_secret_key='\"+args.aws_access_secret_key+\"')\"\n        else:\n            copy_script=\"COPY INTO \"+args.s3_bucket_url+\" FROM \"+args.snowflake_table_name+  \\\n                    \" storage_integration=\"+args.aws_storage_integration\n\n        if args.existing_file_format_name == \"false\":\n            copy_script=copy_script+\" file_format=(type=\"+args.format_type\n            if args.file_format_type_options:\n                copy_script=copy_script+\" \"+args.file_format_type_options+\")\"\n            else:\n                copy_script=copy_script+\")\"\n        else:\n            copy_script=copy_script+\" file_format=\"+args.file_format_name\n        if args.copy_options:\n            copy_script=copy_script+\" \"+args.copy_options+\";\"\n        else:\n                copy_script=copy_script+\";\" \n        ###Copy command set for unloading from S3 data to snowflake table\n        logging.info(\"Copy script:\"+copy_script)\n        cs.execute(copy_script)\n        results = cs.fetchall()\n        logging.info(\"AWS S3 data unload executed ,Output below in STDOUT \")\n        for file in results:\n            print(f'{file}')\n    except Exception as e:\n        logging.error(\"Error in unloading data from AWS S3\")\n        logging.error(e)\n        sys.exit(1)\n#\n#\n######################################################################################\n#This function is to unload the snowflake table directly in to GCP storage\n#######################################################################################\ndef unload_gcp():   \n    snowflake_client=connect_snowflake()\n    cs=snowflake_client.cursor()\n    try:\n        logging.info(\"Initiating unload from Google container to snowflake Table\")\n        ####Prepare copy command from the Job defintion Input args.gcs_bucket\n        copy_script=\"COPY INTO '\"+args.gcs_bucket+\"' FROM \"+args.snowflake_table_name+  \\\n                    \" storage_integration=\"+args.storage_integration\n        if args.existing_file_format_name == \"false\":\n            copy_script=copy_script+\" file_format=(type=\"+args.format_type\n            if args.file_format_type_options:\n                copy_script=copy_script+\" \"+args.file_format_type_options+\")\"\n            else:\n                copy_script=copy_script+\")\"\n        else:\n            copy_script=copy_script+\" file_format=\"+args.file_format_name\n        if args.copy_options:\n            copy_script=copy_script+\" \"+args.copy_options+\";\"\n        else:\n                copy_script=copy_script+\";\" \n        ###Copy command set for loading from GCP data to snowflake table\n        logging.info(\"Copy script:\"+copy_script)\n        cs.execute(copy_script)\n        results = cs.fetchall()\n        logging.info(\"Google storage Data unload executed ,Output below in STDOUT \")\n        for file in results:\n            print(f'{file}')\n    except Exception as e:\n        logging.error(\"Error in unloading the data from Google Storage\")\n        logging.error(e)\n        sys.exit(1)\n#\n#\n\n\n\n# Start the main method\nmain()\n\n",
    "scriptTypeWindows": "uapy",
    "scriptUnix": null,
    "scriptWindows": null,
    "sysId": "04710571923944feb221a23a3e20a1e2",
    "useCommonScript": true,
    "variablePrefix": "snw_fl",
    "waitForOutput": false
}